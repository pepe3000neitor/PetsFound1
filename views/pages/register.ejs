<%- include('../partials/head') %>
<%- include('../partials/header', { user: user }) %>

<main class="flex-grow-1">
  <div class="container my-5">
    <div class="row justify-content-center">
      <div class="col-md-6">
        <h2 class="mb-4 text-center">Registro</h2>

        <!--muestra un mensaje de error general si lo hay-->
        <% if (typeof error !== 'undefined' && error) { %>
          <div class="alert alert-danger alert-dismissible fade show">
            <%= error %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          </div>
        <% } %>

        <!--formulario-->
        <form action="/auth/register" method="POST" id="registerForm" novalidate>
          <!--nombre de usuario -->
          <div class="mb-3">
            <label class="form-label">Nombre de usuario</label>
            <input type="text" class="form-control <%= errors?.username ? 'is-invalid' : '' %>" name="username"
              value="<%= formData.username || '' %>" required>
            <% if (errors?.username) { %>
              <div class="invalid-feedback">
                <%= errors.username %>
              </div>
              <% } %>
          </div>

          <!--email -->
          <div class="mb-3">
            <label class="form-label">Correo electrónico</label>
            <input type="email" class="form-control <%= errors?.email ? 'is-invalid' : '' %>" name="email"
              value="<%= formData.email || '' %>" required>
            <% if (errors?.email) { %>
              <div class="invalid-feedback">
                <%= errors.email %>
              </div>
              <% } %>
                <div id="emailError" class="invalid-feedback d-none">Este correo ya está registrado</div>
          </div>

          <!--fecha de nacimiento -->
          <div class="mb-3">
            <label class="form-label">Fecha de nacimiento</label>
            <input type="date" class="form-control <%= errors?.birthDate ? 'is-invalid' : '' %>" name="birthDate"
              value="<%= formData.birthDate || '' %>" max="<%= new Date().toISOString().split('T')[0] %>" required>
            <% if (errors?.birthDate) { %>
              <div class="invalid-feedback">
                <%= errors.birthDate %>
              </div>
              <% } %>
          </div>

          <!--contraseña -->
          <div class="mb-3">
            <label class="form-label">Contraseña</label>
            <div class="input-group">
              <input type="password" class="form-control <%= errors?.password ? 'is-invalid' : '' %>" id="password"
                name="password" required pattern="^(?=.*[A-Z])(?=.*\d).{8,}$">
              <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('password')">
                <i class="bi bi-eye-fill" id="eye-password"></i>
              </button>
            </div>
            <small class="form-text text-muted">
              Mínimo 8 caracteres, 1 mayúscula y 1 número
            </small>
            <div id="passwordError" class="invalid-feedback d-none">
              La contraseña debe tener al menos 8 caracteres, una mayúscula y un número
            </div>
          </div>

          <!--confirmar Contraseña -->
          <div class="mb-3">
            <label class="form-label">Confirmar Contraseña</label>
            <div class="input-group">
              <input type="password" class="form-control <%= errors?.confirmPassword ? 'is-invalid' : '' %>" id="confirmPassword"
                name="confirmPassword" required>
              <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('confirmPassword')">
                <i class="bi bi-eye-fill" id="eye-confirm"></i>
              </button>
            </div>
            <div id="confirmError" class="invalid-feedback d-none">
              Las contraseñas no coinciden
            </div>
          </div>

          <!--boton de envio -->
          <div class="d-grid mt-4">
            <button type="submit" class="btn btn-primary">Registrarse</button>
          </div>
        </form>

        <!--enlace para iniciar sesion -->
        <div class="text-center mt-3">
          <p class="mb-0">¿Ya tienes cuenta? <a href="/auth/login">Inicia sesión</a></p>
        </div>
      </div>
    </div>
  </div>
</main>

<script>
  //función para mostrar/ocultar contraseña
  function togglePassword(fieldId) {
    const field = document.getElementById(fieldId);
    const eyeIcon = document.getElementById(`eye-${fieldId}`);
    field.type = field.type === 'password' ? 'text' : 'password';
    eyeIcon.classList.toggle('bi-eye-fill');
    eyeIcon.classList.toggle('bi-eye-slash-fill');
  }

  //validación en tiempo real
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('registerForm');
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('confirmPassword');
    
    //validar formato de contraseña
    password.addEventListener('input', () => {
      const regex = /^(?=.*[A-Z])(?=.*\d).{8,}$/;
      const isValid = regex.test(password.value);
      password.classList.toggle('is-invalid', !isValid);
      document.getElementById('passwordError').classList.toggle('d-none', isValid);
    });

    //validar coincidencia de contraseñas
    confirmPassword.addEventListener('input', () => {
      const match = password.value === confirmPassword.value;
      confirmPassword.classList.toggle('is-invalid', !match);
      document.getElementById('confirmError').classList.toggle('d-none', match);
    });

    //validar antes de enviar
    form.addEventListener('submit', (e) => {
      let valid = true;
      
      //validar contraseña
      const passwordValid = /^(?=.*[A-Z])(?=.*\d).{8,}$/.test(password.value);
      if (!passwordValid) {
        password.classList.add('is-invalid');
        document.getElementById('passwordError').classList.remove('d-none');
        valid = false;
      }

      //validar coincidencia
      if (password.value !== confirmPassword.value) {
        confirmPassword.classList.add('is-invalid');
        document.getElementById('confirmError').classList.remove('d-none');
        valid = false;
      }

      if (!valid) {
        e.preventDefault();
        e.stopPropagation();
      }
    });
  });
</script>

<%- include('../partials/footer') %>